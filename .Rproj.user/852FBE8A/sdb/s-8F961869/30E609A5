{
    "collab_server" : "",
    "contents" : "df <- read.csv(\"school_fire_cases_1998_2014.csv\", header = T, sep = \";\", encoding=\"UTF-8\")\nlibrary(dplyr)\n\ndf %>% group_by(Municipality) %>% summarise(li = sum(Cases), ratio = (sum(Cases)/mean(Population)) * 100) %>% \n  ungroup() %>% mutate(sr_r = mean(ratio), diff = ratio-sr_r) %>% top_n(10, diff) %>%\n  ggplot(aes(x = Municipality, y = diff)) + geom_point() + coord_flip()\n\ndf %>% group_by(Municipality) %>% summarise(sum_cases = sum(Cases), ratio = (sum(Cases)/mean(Population)) * 100) %>% \n  ungroup() %>% mutate(mean_r = mean(ratio), diff = ratio-mean_r) %>% top_n(10, diff) %>%\n  ggplot(aes(x = Municipality, y = diff)) + geom_bar(stat = \"identity\", fill = \"maroon\") + coord_flip()\n\n\ndf %>% group_by(Municipality) %>% summarise(sum_cases = sum(Cases), ratio = (sum(Cases)/mean(Population)) * 100) %>% \n  ungroup() %>% mutate(mean_r = mean(ratio), diff = ratio-mean_r) %>% top_n(10, ratio) %>%\n  ggplot(aes(x = Municipality, y = ratio)) + geom_bar(stat = \"identity\", fill = \"maroon\") + coord_flip()\n\n\n\n\nchar <- read.csv(\"simplified_municipality_indicators.csv\", header = T, sep = \";\", encoding=\"UTF-8\")\n\nchar <- char %>% rename(Municipality = name)\n\ndf <- left_join(df, char, by = \"Municipality\")\nhead(df)\n\ndf1 <- df[complete.cases(df), ]\n\ndf %>% group_by(Municipality) %>% summarise(li = sum(Cases), inc = mean(youthUnemployment2010), ratio = (sum(Cases)/mean(Population)) * 100) %>% \n  ungroup() %>% mutate(sr_r = mean(ratio), diff = ratio-sr_r) %>% top_n(10, diff)\n\ndf %>% group_by(Municipality) %>% summarise(sr = mean(unemployment2010)) %>% top_n(10, sr)\nhead(df)\n\n\nggplot(aes(x = Year, y = Cases), data = df) + stat_summary(fun.y = \"mean\", geom = \"point\")\n\ndf %>% group_by(Municipality) %>% summarise(ref = mean(refugees), cases = sum(Cases)) %>%\nggplot(aes(x = ref, y = cases)) + geom_point()\n\ndf %>% filter(Population < 200000) %>% group_by(Municipality) %>% \n  summarise(inc = mean(medianIncome), cases = sum(Cases), pop = mean(Population), sr_ref = mean(refugees)) %>%\n  ggplot(aes(x = inc, y = cases)) + geom_point(aes(size = sr_ref)) + \n  geom_smooth(method = \"lm\")\n\ndf %>% group_by(Municipality) %>% summarise(sr_pop = mean(Population)) %>%\n  ggplot(aes(x = sr_pop)) + geom_histogram()\n\ndf %>% filter(Population < 200000) %>% group_by(Municipality) %>% \n  summarise(inc = mean(medianIncome), cases = sum(Cases), pop = mean(Population), sr_ref = mean(refugees)) %>%\n  ggplot(aes(x = inc, y = sr_ref)) + geom_point(aes(size = cases)) + \n  geom_smooth(method = \"lm\")\n\ndf %>% mutate(lat = substr(latitude, 1, 2)) %>% ungroup() %>%\n  group_by(lat) %>% summarise(cases = sum(Cases), sr_pop = mean(Population)) %>%\n  ggplot(aes(x = lat, y = cases/sr_pop)) + geom_bar(stat = \"identity\")\n\ndf %>% group_by(Municipality) %>% summarise(cases = sum(Cases), sr_pop = mean(Population)) %>%\n  ggplot(aes(x = lat, y = cases/sr_pop)) + geom_bar(stat = \"identity\")\n\ndf %>% group_by(municipalityTypeBroad) %>% summarise(cases = sum(Cases), sr_pop = mean(Population)) %>%\n  ggplot(aes(x = municipalityTypeBroad, y = cases/sr_pop)) + geom_bar(stat = \"identity\")\n\ndf %>% group_by(governing) %>% summarise(cases = sum(Cases), sr_pop = mean(Population)) %>%\n  ggplot(aes(x = governing, y = cases/sr_pop)) +  geom_bar(stat = \"identity\")\n\ndf %>% filter(Population < 200000 & refugees < 100) %>% group_by(Municipality, municipalityType) %>% \n  summarise(inc = mean(medianIncome), cases = sum(Cases), pop = mean(Population), sr_ref = mean(refugees)) %>%\n  ggplot(aes(x = pop, y = cases/pop)) + geom_point(aes(size = sr_ref, color = municipalityType)) + \n  geom_smooth(method = \"lm\")\n\ndf %>% filter(Population < 200000 & refugees < 100) %>% group_by(Municipality, municipalityType) %>% \n  summarise(inc = mean(medianIncome), cases = sum(Cases), pop = mean(Population), sr_ref = mean(refugees),\n            forg_bor = mean(foreignBorn, na.rm = T)) %>%\n  ggplot(aes(x = pop, y = cases/pop)) + geom_point(aes(size = forg_bor, color = municipalityType)) + \n  geom_smooth(method = \"lm\")\n\nhead(df)\n?cut\ndf <- df %>% mutate(has_edu_clas = cut(hasEducation, breaks = seq(0, 100, 10)))\n\ndf %>% filter(Population < 200000) %>% group_by(Year) %>% summarise(li = sum(Cases)) %>%\n  ggplot(aes(x = Year, y = li)) +  geom_bar(stat = \"identity\", fill = \"blue\") + geom_line(color = \"red\", size= 2)\n\ndf %>% filter(Population < 200000) %>% group_by(has_edu_clas) %>% \n  summarise(li = sum(Cases), pop = mean(Population)) %>%\n  ggplot(aes(x = has_edu_clas, y = li/pop)) +  geom_bar(stat = \"identity\", fill = \"blue\") + geom_line(color = \"red\", size= 2)\n\ndf %>% mutate(fokrank_clas = cut(fokusRanking, breaks = seq(0, 320, 40))) %>% \n  filter(Population < 200000) %>% group_by(fokrank_clas) %>% \n  summarise(li = sum(Cases), pop = mean(Population)) %>%\n  ggplot(aes(x = fokrank_clas, y = li)) +  geom_bar(stat = \"identity\", fill = \"blue\") \n\ndf %>% mutate(fokrank_clas = cut(fokusRanking, breaks = seq(0, 320, 40))) %>% \n  filter(Population < 200000) %>% group_by(fokrank_clas) %>% \n  summarise(li = sum(Cases), pop = sum(Population)) %>%\n  ggplot(aes(x = fokrank_clas, y = pop)) +  geom_bar(stat = \"identity\", fill = \"blue\") \n\nlibrary(randomForest)\nhead(df)\n\ndf1 <- df %>% mutate(Cases = Cases + 0.001) %>% filter(Cases > 0) %>%\n  select(c(Cases, Population, governing, latitude))\nrf <- randomForest(Cases ~ ., data = df1, ntree=500, importance=TRUE)\nbarplot(rf$importance[,2],las=2, main=\"Random forest feature importance (node purity)\")\nbarplot(rf$importance[,1],las=2, main=\"Random forest feature importance (inc MSE)\")\n\nlibrary(corrr)\nhead(df1)\n#select numeric columns\nnums <- sapply(df, is.numeric)\ndf1 <- df[, nums]\nM <- df1 %>% select(-population) %>% correlate() %>% focus(Cases) %>% filter(Cases > 0.2 | Cases < -0.2)\nM\n\nlibrary(corrplot)\nM1 <- cor(df1[, c(\"Cases\", unique(M$rowname))])\ncorrplot(M1, method = \"circle\")\n\nM <- df1 %>% select(-population) %>% correlate() %>% focus(Cases) %>% filter(Cases > 0.2 | Cases < -0.2)\npairs(df1[, c(unique(M$rowname), \"Cases\")])\n\n\n\n\n\n\n",
    "created" : 1472727653741.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "2562282566",
    "id" : "30E609A5",
    "lastKnownWriteTime" : 1473080127,
    "last_content_update" : 1473080127960,
    "path" : "~/R/School_fires/analysis.R",
    "project_path" : "analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}